t.Expr ::=
    s.VarName
  | s.NUMBER
  | ("-" t.Expr)
  | (t.Expr s.BinOp t.Expr)
s.BinOp ::= "+" | "-" | "*" | "/"
s.VarName ::= "X" 
s.NUMBER ::= "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"


((X "*" Y) "+" ((2 "*" X) "+" (3 "*" Y))) X
((X "*" Y) "+" ((2 "*" X) "+" (3 "*" Y))) Y
((X * Y * Z

X
(X + 5)
(4 * X)
(-(6 / X))
((-(X * 2)) + 8)
(X / (5 - 3))
((X + 5) * 3)
((2 * (X + 3)) / (4 - X))
(((-(X + 5) * 3) + ((4 * X) / (7 - 2))) - ((9 - X) * (6 / 3)))


