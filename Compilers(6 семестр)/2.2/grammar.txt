Program    → FunctionDef | FunctionDef Program
FunctionDef → Comment FunctionSignature "is" Statements "end"
Comment -> "@" String | eps

FunctionSignature → FUNCNAME Type "::" Type

Type       → Addr "(" TypeList ")" | Addr TypeADDr
Addr -> '*' | eps
TypeList   → TypeADDr "," TypeList | TypeADDr "," TypeADDr
TypeADDr -> Addr TypeName
TypeName  -> 'int' | 'float' | 'string' 

Statements → Statement ";" | Statement ";" Statements
Statement  → Sample "=" Expr

Sample -> Pattermatch
Pattermatch -> Val 
Pattermatch -> Val ":" Pattermatch
Val -> VARNAME | '(' Vals ')' | '{' Vals '}' | '[' Pattermatch ']' 
Vals -> eps | Pattermatch | Vals'
Vals' -> Pattermatch ',' Pattermatch | Pattermatch ',' Vals'


Expr -> Pattermatch | CallExpr | Calculate | Num | Tuple
Alt-> Expr
ALT->EXPR OP ALT
CallExpr   → VARNAME Pattermatch
Calculate -> Expr Op Expr
Num -> DIGIT+
Tuple -> '(' ValList ')'
ValList -> Pattermatch | Pattermatch ',' ValList
 

Op -> '*' | '/' | '+' | '-'
DIGIT -> '0' | ... | '9'
VARNAME -> [a-zA-Z][a-zA-Z0-9_]*




