Program    → FunctionDef | FunctionDef Program
FunctionDef → Comment FunctionSignature "is" Statements "end"
Comment -> "@" String | eps

FunctionSignature → FUNCNAME Type "::" Type

Type       → Addr "(" TypeList ")" | Addr TypeName
Addr -> '*' | '*' '*' | eps
TypeList   → Type "," TypeList | Type "," Type
TypeName  -> 'int' | 'float' | 'string' | 'bool'

Statements → Statement | Statement ";" Statements
Statement  → Sample "=" Expr

Sample -> Val
Val -> VARNAME | '(' Vals ')' | '{' Vals '}' | '[' Val ']' | Val ':' Val
Vals -> eps | Val | Vals'
Vals' -> Val ',' Val | Val ',' Vals'


Expr -> Val | CallExpr | Calculate | Num | Tuple
CallExpr   → VARNAME Val
Calculate -> Expr Op Expr
Num -> DIGIT+
Tuple -> '(' ValList ')'
ValList -> Val | Val ',' ValList
 

Op -> '*' | '/' | '+' | '-'
DIGIT -> '0' | ... | '9'
VARNAME -> [a-zA-Z][a-zA-Z0-9_]*




